name: "Build & Release"

on:
  pull_request:
    branches:
      - releases
  push:
    branches:
      - releases

jobs:  # Telling what jobs we need to happen
  build:      # Specify the building name and machine
    name: Build & Release  # you can name the build whatever you want
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '21'

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.0'
          channel: 'stable'

      - name: Install Dependencies
        run: |
          cd myriad
          flutter pub get

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > myriad/android/app/keystore.jks
      
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > myriad/android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> myriad/android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> myriad/android/key.properties
          echo "storeFile=keystore.jks" >> myriad/android/key.properties

      - name: Adding API Key to local.properties
        run: |
          echo "${{ secrets.PW_1 }}" >> myriad/android/local.properties
      
      - name: Adding API Keys to passwords.dart
        run: |
          echo "final GEMINI_API_KEY = ${{ secrets.PW_2 }};" >> myriad/lib/passwords.dart
          echo "final MAPS_API_KEY = ${{ secrets.PW_3 }};" >> myriad/lib/passwords.dart

      - name: Remove invalid Java home from gradle.properties
        run: sed -i '/^org.gradle.java.home/d' myriad/android/gradle.properties
        
      - name: Build APK
        run: |
          cd myriad
          flutter build apk --release

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: myriad/build/app/outputs/flutter-apk/app-release.apk

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' myriad/pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi
      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "myriad/build/app/outputs/flutter-apk/app-release.apk"
          tag: v${{ env.VERSION }}
          token: ${{ secrets.TOKEN }}